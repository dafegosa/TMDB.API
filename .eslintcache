[{"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\index.js":"1","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\router\\AppRouter.js":"2","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Home.js":"3","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Dashboard.js":"4","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\NotFoundPage.js":"5","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Header.js":"6","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Redirect.js":"7","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\functions.js":"8","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\store\\store.js":"9","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchForm.js":"10","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\actions\\result.js":"11","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\albums.js":"12","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\playlist.js":"13","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\artists.js":"14","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\api.js":"15","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\constants.js":"16","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Loader.js":"17","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\ArtistsList.js":"18","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchResult.js":"19","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\AlbumsList.js":"20","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\PlayList.js":"21","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Details.js":"22","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\index.js":"23","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\store\\store.js":"24","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\router\\AppRouter.js":"25","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Dashboard.js":"26","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Home.js":"27","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Redirect.js":"28","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\constants.js":"29","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\functions.js":"30","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\actions\\result.js":"31","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\SearchResult.js":"32","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\api.js":"33","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Details.js":"34","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\UpComing.js":"35","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\upComing.js":"36","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\topRated.js":"37","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\TopRated.js":"38","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\popular.js":"39","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Popular.js":"40"},{"size":369,"mtime":1611109438635,"results":"41","hashOfConfig":"42"},{"size":1812,"mtime":1611205968045,"results":"43","hashOfConfig":"42"},{"size":1414,"mtime":1611339034512,"results":"44","hashOfConfig":"42"},{"size":2521,"mtime":1611248000742,"results":"45","hashOfConfig":"42"},{"size":159,"mtime":1611108983065,"results":"46","hashOfConfig":"42"},{"size":196,"mtime":1611113753925,"results":"47","hashOfConfig":"42"},{"size":786,"mtime":1611205954173,"results":"48","hashOfConfig":"42"},{"size":559,"mtime":1611205977475,"results":"49","hashOfConfig":"42"},{"size":563,"mtime":1611184558818,"results":"50","hashOfConfig":"42"},{"size":1917,"mtime":1611295526103,"results":"51","hashOfConfig":"42"},{"size":1960,"mtime":1611205941626,"results":"52","hashOfConfig":"42"},{"size":429,"mtime":1611205990811,"results":"53","hashOfConfig":"42"},{"size":453,"mtime":1611205882265,"results":"54","hashOfConfig":"42"},{"size":439,"mtime":1611205881484,"results":"55","hashOfConfig":"42"},{"size":350,"mtime":1611117437546,"results":"56","hashOfConfig":"42"},{"size":252,"mtime":1611117467959,"results":"57","hashOfConfig":"42"},{"size":677,"mtime":1611210919103,"results":"58","hashOfConfig":"42"},{"size":3173,"mtime":1611286506111,"results":"59","hashOfConfig":"42"},{"size":2830,"mtime":1611248038386,"results":"60","hashOfConfig":"42"},{"size":3212,"mtime":1611296288637,"results":"61","hashOfConfig":"42"},{"size":3557,"mtime":1611285296539,"results":"62","hashOfConfig":"42"},{"size":2007,"mtime":1611296663208,"results":"63","hashOfConfig":"42"},{"size":369,"mtime":1611109438635,"results":"64","hashOfConfig":"65"},{"size":565,"mtime":1611724108385,"results":"66","hashOfConfig":"65"},{"size":707,"mtime":1611724546616,"results":"67","hashOfConfig":"65"},{"size":2617,"mtime":1611724420350,"results":"68","hashOfConfig":"65"},{"size":481,"mtime":1611723771100,"results":"69","hashOfConfig":"65"},{"size":786,"mtime":1611205954173,"results":"70","hashOfConfig":"65"},{"size":256,"mtime":1611693805390,"results":"71","hashOfConfig":"65"},{"size":559,"mtime":1611205977475,"results":"72","hashOfConfig":"65"},{"size":2942,"mtime":1611724208944,"results":"73","hashOfConfig":"65"},{"size":2022,"mtime":1611724195943,"results":"74","hashOfConfig":"65"},{"size":350,"mtime":1611117437546,"results":"75","hashOfConfig":"65"},{"size":1144,"mtime":1611723159163,"results":"76","hashOfConfig":"65"},{"size":2546,"mtime":1611724194491,"results":"77","hashOfConfig":"65"},{"size":363,"mtime":1611724191076,"results":"78","hashOfConfig":"65"},{"size":355,"mtime":1611724007435,"results":"79","hashOfConfig":"65"},{"size":2560,"mtime":1611724197837,"results":"80","hashOfConfig":"65"},{"size":349,"mtime":1611724192785,"results":"81","hashOfConfig":"65"},{"size":2264,"mtime":1611724489338,"results":"82","hashOfConfig":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"jk7mgj",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"85"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vne8wa",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\index.js",[],["173","174"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\router\\AppRouter.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Home.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Dashboard.js",["175"],"import React, { useState } from 'react'\r\nimport Header from './Header'\r\nimport SearchForm from './SearchForm'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists,\r\n} from '../actions/result'\r\nimport Loader from './Loader'\r\nimport SearchResult from './SearchResult'\r\n\r\nconst Dashboard = (props) => {\r\n  const albums = useSelector((state) => state.albums)\r\n  const artists = useSelector((state) => state.artists)\r\n  const playlist = useSelector((state) => state.playlist)\r\n  const dispatch = useDispatch()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [selectedCategory, setSelectedCategory] = useState('albums')\r\n  const { isValidSession, history } = props\r\n  const [toSearch, setToSearch] = useState('')\r\n  const handleSearch = (searchMe) => {\r\n    setToSearch(searchMe)\r\n    if (isValidSession()) {\r\n      setLoading(true)\r\n      dispatch(initiateGetResult(searchMe)).then(() => {\r\n        setLoading(false)\r\n        setSelectedCategory('albums')\r\n      })\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const setCategory = (category) => {\r\n    setSelectedCategory(category)\r\n  }\r\n\r\n  const loadMore = async (type) => {\r\n    if (isValidSession()) {\r\n      setLoading(true)\r\n      switch (type) {\r\n        case 'albums':\r\n          await dispatch(initiateLoadMoreAlbums(albums.next))\r\n          break\r\n        case 'artists':\r\n          await dispatch(initiateLoadMoreArtists(artists.next))\r\n          break\r\n        case 'playlist':\r\n          await dispatch(initiateLoadMorePlaylist(playlist.next))\r\n          break\r\n        default:\r\n      }\r\n      setLoading(false)\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const result = { albums, artists, playlist }\r\n  return (\r\n    <div>\r\n      <div className='login'>\r\n        <Header />\r\n      </div>\r\n\r\n      <SearchForm handleSearch={handleSearch} />\r\n      <Loader show={Loading}>Buscando...</Loader>\r\n      <SearchResult\r\n        toSearch={toSearch}\r\n        loadMore={loadMore}\r\n        result={result}\r\n        setCategory={setCategory}\r\n        selectedCategory={selectedCategory}\r\n        isValidSession={isValidSession}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\NotFoundPage.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Header.js",["176"],"import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <img src='https://img.icons8.com/bubbles/200/000000/spotify.png' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Redirect.js",["177","178"],"import React, { useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport { getParamValues } from '../utils/functions'\r\n\r\nexport const Redirect = (props) => {\r\n  useEffect(() => {\r\n    const { setExpiryTime, history, location } = props\r\n    try {\r\n      if (_.isEmpty(location.hash)) {\r\n        return history.push('/dashboard')\r\n      }\r\n\r\n      const access_token = getParamValues(location.hash)\r\n      const expiryTime = new Date().getTime() + access_token.expires_in * 1000\r\n      localStorage.setItem('params', JSON.stringify(access_token))\r\n      localStorage.setItem('expiry_time', expiryTime)\r\n      setExpiryTime(expiryTime)\r\n      history.push('/dashboard')\r\n    } catch (err) {\r\n      history.push('/')\r\n      console.error('error', err)\r\n    }\r\n  }, [])\r\n\r\n  return null\r\n}\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\functions.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\store\\store.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchForm.js",["179","180"],"import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchMe, setSearchMe] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState(false)\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (searchMe.trim() !== '') {\r\n      props.handleSearch(searchMe)\r\n    } else {\r\n      setErrorMsg(true)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg ? (\r\n          <p className='errorMsg'>\r\n            No podemos saber qué estás buscando{' '}\r\n            <i\r\n              style={{ fontSize: '1rem' }}\r\n              class='em em-confused'\r\n              aria-role='presentation'\r\n              aria-label='CONFUSED FACE'\r\n            ></i>\r\n            . <br />\r\n            Ingresa una palabra relacionada con lo que buscas e ¡intentalo de\r\n            nuevo!{' '}\r\n            <i\r\n              style={{ fontSize: '1rem' }}\r\n              class='em em-white_check_mark'\r\n              aria-role='presentation'\r\n              aria-label='WHITE HEAVY CHECK MARK'\r\n            ></i>\r\n            .\r\n          </p>\r\n        ) : null}\r\n        <Form.Group controlId='formBasicEmail'>\r\n          <Form.Label data-testId='testingText' style={{ color: '#fce0a2' }}>\r\n            ¿Qué estás buscando?\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='search'\r\n            name='searchTerm'\r\n            value={searchMe}\r\n            onChange={(e) => {\r\n              setSearchMe(e.target.value)\r\n              setErrorMsg(false)\r\n            }}\r\n            placeholder='Buscar por album, artista o play list'\r\n            autoComplete='off'\r\n          />\r\n        </Form.Group>\r\n        <Button style={{ background: '#60be92', border: 'none' }} type='submit'>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\actions\\result.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\albums.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\playlist.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\artists.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\api.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\constants.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Loader.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\ArtistsList.js",["181","182"],"import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport Details from './Details'\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const dispatch = useDispatch()\r\n  const [showInfo, setShowInfo] = useState(false)\r\n  const [artistsInfo, setArtistsInfo] = useState({})\r\n  let image = ''\r\n  const handleArtists = (artistsId, index) => {\r\n    let artistsSelected = artists.items.filter(\r\n      (artists) => artists.id === artistsId\r\n    )\r\n    artistsSelected = artistsSelected[0]\r\n    if (artistsSelected.images.length !== 0) {\r\n      image = artistsSelected.images[0].url\r\n    } else {\r\n      image =\r\n        'https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n    }\r\n    setArtistsInfo({\r\n      artist: artistsSelected.name,\r\n      image,\r\n      name: artistsSelected.name,\r\n      release: '',\r\n      tracks: artistsSelected.followers.total,\r\n      url: artistsSelected.external_urls.spotify,\r\n      type: 'artists',\r\n    })\r\n\r\n    setShowInfo(true)\r\n  }\r\n  const closeInfo = () => {\r\n    setShowInfo(false)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {showInfo ? <Details info={artistsInfo} closeInfo={closeInfo} /> : null}\r\n      {\r\n        <div>\r\n          {!showInfo\r\n            ? Object.keys(artists).length > 0 && (\r\n                <div className='artists'>\r\n                  {artists.items.map((artist, index) => {\r\n                    return (\r\n                      <React.Fragment key={index}>\r\n                        <Card\r\n                          className='card text-white bg-dark mb-3'\r\n                          style={{\r\n                            width: '16rem',\r\n                          }}\r\n                          onClick={() => {\r\n                            handleArtists(artist.id, index)\r\n                          }}\r\n                        >\r\n                          <a\r\n                            target='_blank'\r\n                            rel='noopener noreferrer'\r\n                            className='card-image-link'\r\n                          >\r\n                            {!_.isEmpty(artist.images) ? (\r\n                              <Card.Img\r\n                                variant='top'\r\n                                src={artist.images[0].url}\r\n                                alt=''\r\n                              />\r\n                            ) : (\r\n                              <Card.Img\r\n                                src='https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n                                alt=''\r\n                              />\r\n                            )}\r\n                          </a>\r\n                          <Card.Body>\r\n                            <Card.Title>{artist.name}</Card.Title>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </React.Fragment>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            : null}\r\n        </div>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ArtistsList\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchResult.js",["183","184"],"import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport AlbumsList from './AlbumsList'\r\nimport ArtistsList from './ArtistsList'\r\nimport PlayList from './PlayList'\r\n\r\nconst SearchResult = (props) => {\r\n  const albums = useSelector((state) => state.albums)\r\n  const artists = useSelector((state) => state.artists)\r\n  const playlist = useSelector((state) => state.playlist)\r\n  const {\r\n    isValidSession,\r\n    setCategory,\r\n    selectedCategory,\r\n    loadMore,\r\n    toSearch,\r\n  } = props\r\n  if (!isValidSession()) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/',\r\n          state: {\r\n            session_expired: true,\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='search-buttons'>\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n      {albums.items ? (\r\n        albums.items.length === 0 ? (\r\n          <p className='alert alert-warning alert-dismissible fade show'>\r\n            No hemos encontrado nada relacionado a {toSearch}. Intenta con otras\r\n            palabras\r\n          </p>\r\n        ) : (\r\n          <div className='load-more' onClick={() => loadMore(selectedCategory)}>\r\n            <Button variant='btn btn-outline-dark' type='button'>\r\n              Ver mas...\r\n            </Button>\r\n          </div>\r\n        )\r\n      ) : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchResult\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\AlbumsList.js",["185","186"],"import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport Details from './Details'\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const dispatch = useDispatch()\r\n  const [showInfo, setShowInfo] = useState(false)\r\n  const [albumInfo, setAlbumInfo] = useState({})\r\n  let image = ''\r\n  const handleAlbum = (albumId, index) => {\r\n    let albumSelected = albums.items.filter((album) => album.id === albumId)\r\n    albumSelected = albumSelected[0]\r\n    if (albumSelected.images.length !== 0) {\r\n      image = albumSelected.images[0].url\r\n    } else {\r\n      image =\r\n        'https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n    }\r\n    setAlbumInfo({\r\n      artist: albumSelected.artists[0].name,\r\n      image,\r\n      name: albumSelected.name,\r\n      release: albumSelected.release_date,\r\n      tracks: albumSelected.total_tracks,\r\n      url: albumSelected.external_urls.spotify,\r\n      type: 'albums',\r\n    })\r\n    setShowInfo(true)\r\n  }\r\n  const closeInfo = () => {\r\n    setShowInfo(false)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {showInfo ? <Details info={albumInfo} closeInfo={closeInfo} /> : null}\r\n      {!showInfo\r\n        ? Object.keys(albums).length > 0 && (\r\n            <div className='albums'>\r\n              {albums.items.map((album, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <Card\r\n                      className='card text-white bg-dark mb-3'\r\n                      style={{\r\n                        width: '16rem',\r\n                      }}\r\n                      onClick={() => {\r\n                        handleAlbum(album.id, index)\r\n                      }}\r\n                    >\r\n                      <a\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        className='card-image-link'\r\n                      >\r\n                        {!_.isEmpty(album.images) ? (\r\n                          <Card.Img\r\n                            variant='top'\r\n                            src={album.images[0].url}\r\n                            alt=''\r\n                          />\r\n                        ) : (\r\n                          <Card.Img\r\n                            src='https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n                            alt=''\r\n                          />\r\n                        )}\r\n                      </a>\r\n                      <Card.Body>\r\n                        <Card.Title>{album.name}</Card.Title>\r\n                        <Card.Text>\r\n                          <small>\r\n                            {album.artists\r\n                              .map((artist) => artist.name)\r\n                              .join(', ')}\r\n                          </small>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </div>\r\n          )\r\n        : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AlbumsList\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\PlayList.js",["187","188"],"import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport Details from './Details'\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  const dispatch = useDispatch()\r\n  const [showInfo, setShowInfo] = useState(false)\r\n  const [playlistInfo, setPlaylistInfo] = useState({})\r\n  let image = ''\r\n  const handlePlaylist = (itemId, index) => {\r\n    let playlistSelected = playlist.items.filter(\r\n      (playlist) => playlist.id === itemId\r\n    )\r\n    playlistSelected = playlistSelected[0]\r\n    if (playlistSelected.images.length !== 0) {\r\n      image = playlistSelected.images[0].url\r\n    } else {\r\n      image =\r\n        'https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n    }\r\n    setPlaylistInfo({\r\n      artist: playlistSelected.owner.display_name,\r\n      image,\r\n      name: playlistSelected.name,\r\n      release: playlistSelected.owner.external_urls.spotify,\r\n      tracks: playlistSelected.tracks.total,\r\n      url: playlistSelected.external_urls.spotify,\r\n      type: 'playlist',\r\n    })\r\n\r\n    setShowInfo(true)\r\n  }\r\n  const closeInfo = () => {\r\n    setShowInfo(false)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {showInfo ? <Details info={playlistInfo} closeInfo={closeInfo} /> : null}\r\n      {\r\n        <div>\r\n          {!showInfo\r\n            ? Object.keys(playlist).length > 0 && (\r\n                <div className='playlist'>\r\n                  {playlist.items.map((item, index) => {\r\n                    return (\r\n                      <React.Fragment key={index}>\r\n                        <Card\r\n                          className='card text-white bg-dark mb-3'\r\n                          style={{\r\n                            width: '16rem',\r\n                          }}\r\n                          onClick={() => {\r\n                            handlePlaylist(item.id, index)\r\n                          }}\r\n                        >\r\n                          <a\r\n                            target='_blank'\r\n                            rel='noopener noreferrer'\r\n                            className='card-image-link'\r\n                          >\r\n                            {!_.isEmpty(item.images) ? (\r\n                              <Card.Img\r\n                                variant='top'\r\n                                src={item.images[0].url}\r\n                                alt=''\r\n                              />\r\n                            ) : (\r\n                              <Card.Img\r\n                                src='https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n                                alt=''\r\n                              />\r\n                            )}\r\n                          </a>\r\n                          <Card.Body>\r\n                            <Card.Title>{item.name}</Card.Title>\r\n                            <Card.Text>\r\n                              <small>\r\n                                {/* {item.artists\r\n                                  .map((artist) => artist.name)\r\n                                  .join(', ')} */}\r\n                              </small>\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </React.Fragment>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            : null}\r\n        </div>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default PlayList\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Details.js",["189","190","191","192","193"],"import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst Details = ({ info, closeInfo }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        className='card text-white bg-dark mb-3 text-center'\r\n        style={{\r\n          width: '100%',\r\n          marginLeft: '0',\r\n        }}\r\n      >\r\n        <div class='card-header title'>\r\n          <strong>{info.name}</strong>\r\n        </div>\r\n        <Card.Body>\r\n          <Card.Img variant='top' src={info.image} alt='' />\r\n          <br />\r\n          <br />\r\n          <Card.Title>\r\n            {info.type === 'artists'\r\n              ? null\r\n              : info.type === 'albums'\r\n              ? `Artista: ${info.artist}`\r\n              : `Creador: ${info.artist}`}\r\n          </Card.Title>\r\n          <Card.Title>\r\n            {info.type === 'artists' ? null : info.type === 'albums' ? (\r\n              `Fecha de Lanzamiento: ${info.release}`\r\n            ) : (\r\n              <a href={info.release} target='_blank'>\r\n                Conoce el perfil de {info.artist} en Spotify\r\n              </a>\r\n            )}\r\n          </Card.Title>\r\n          <Card.Title>\r\n            {info.type === 'artists' ? 'Seguidores:' : 'Número de tracks:'}{' '}\r\n            {info.tracks}\r\n          </Card.Title>\r\n          <Card.Title>\r\n            <a href={info.url} target='_blank'>\r\n              {' '}\r\n              {info.type === 'artists'\r\n                ? `Ir al perfil de ${info.name} en Spotify`\r\n                : 'Escuchar en Spotify'}\r\n            </a>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <button\r\n              className='btn btn-secondary btn-lg btn-block'\r\n              type='button'\r\n              onClick={() => {\r\n                closeInfo()\r\n              }}\r\n            >\r\n              cerrar\r\n            </button>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\index.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\store\\store.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\router\\AppRouter.js",["194","195","196"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Dashboard.js",["197","198","199","200","201","202"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Home.js",["203","204","205","206","207","208"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Redirect.js",["209","210"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\constants.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\functions.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\actions\\result.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\SearchResult.js",["211","212","213","214","215"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\utils\\api.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Details.js",["216","217","218"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\UpComing.js",["219","220","221","222"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\upComing.js",["223"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\topRated.js",["224"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\TopRated.js",["225","226","227","228"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\reducers\\popular.js",["229"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\TMDB\\tmdb-api\\src\\components\\Popular.js",["230","231","232","233"],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":6,"column":7,"nodeType":"244","endLine":6,"endColumn":74},{"ruleId":"238","severity":1,"message":"245","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":23,"column":6,"nodeType":"248","endLine":23,"endColumn":8,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":25,"column":15,"nodeType":"252","endLine":25,"endColumn":39},{"ruleId":"250","severity":1,"message":"251","line":34,"column":15,"nodeType":"252","endLine":34,"endColumn":39},{"ruleId":"238","severity":1,"message":"253","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"254","severity":1,"message":"255","line":58,"column":27,"nodeType":"244","endLine":62,"endColumn":28},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"257","line":5,"column":23,"nodeType":"240","messageId":"241","endLine":5,"endColumn":34},{"ruleId":"238","severity":1,"message":"253","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"254","severity":1,"message":"255","line":53,"column":23,"nodeType":"244","endLine":57,"endColumn":24},{"ruleId":"238","severity":1,"message":"253","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"254","severity":1,"message":"255","line":58,"column":27,"nodeType":"244","endLine":62,"endColumn":28},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"258","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"259","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":33,"column":15,"nodeType":"244","endLine":33,"endColumn":54},{"ruleId":"260","severity":1,"message":"261","line":43,"column":13,"nodeType":"244","endLine":43,"endColumn":48},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"258","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"262","line":19,"column":10,"nodeType":"240","messageId":"241","endLine":19,"endColumn":17},{"ruleId":"238","severity":1,"message":"263","line":21,"column":11,"nodeType":"240","messageId":"241","endLine":21,"endColumn":25},{"ruleId":"238","severity":1,"message":"264","line":21,"column":27,"nodeType":"240","messageId":"241","endLine":21,"endColumn":34},{"ruleId":"238","severity":1,"message":"265","line":22,"column":20,"nodeType":"240","messageId":"241","endLine":22,"endColumn":31},{"ruleId":"246","severity":1,"message":"266","line":41,"column":6,"nodeType":"248","endLine":41,"endColumn":8,"suggestions":"267"},{"ruleId":"238","severity":1,"message":"268","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":15},{"ruleId":"238","severity":1,"message":"269","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"270","line":9,"column":5,"nodeType":"240","messageId":"241","endLine":9,"endColumn":24},{"ruleId":"238","severity":1,"message":"271","line":10,"column":5,"nodeType":"240","messageId":"241","endLine":10,"endColumn":28},{"ruleId":"238","severity":1,"message":"272","line":11,"column":5,"nodeType":"240","messageId":"241","endLine":11,"endColumn":27},{"ruleId":"238","severity":1,"message":"245","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":23,"column":6,"nodeType":"248","endLine":23,"endColumn":8,"suggestions":"273"},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"274","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":9},{"ruleId":"238","severity":1,"message":"239","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":18},{"ruleId":"238","severity":1,"message":"257","line":5,"column":23,"nodeType":"240","messageId":"241","endLine":5,"endColumn":34},{"ruleId":"238","severity":1,"message":"275","line":14,"column":52,"nodeType":"240","messageId":"241","endLine":14,"endColumn":60},{"ruleId":"238","severity":1,"message":"256","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"258","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"259","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":16},{"ruleId":"238","severity":1,"message":"274","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":9},{"ruleId":"238","severity":1,"message":"253","line":8,"column":9,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"238","severity":1,"message":"276","line":11,"column":7,"nodeType":"240","messageId":"241","endLine":11,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":48,"column":21,"nodeType":"244","endLine":52,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":11,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":11,"endColumn":19},{"ruleId":"238","severity":1,"message":"274","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":9},{"ruleId":"238","severity":1,"message":"253","line":9,"column":9,"nodeType":"240","messageId":"241","endLine":9,"endColumn":17},{"ruleId":"238","severity":1,"message":"276","line":12,"column":7,"nodeType":"240","messageId":"241","endLine":12,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":48,"column":21,"nodeType":"244","endLine":52,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":10,"column":5,"nodeType":"279","messageId":"280","endLine":11,"endColumn":19},{"ruleId":"238","severity":1,"message":"274","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":9},{"ruleId":"238","severity":1,"message":"253","line":9,"column":9,"nodeType":"240","messageId":"241","endLine":9,"endColumn":17},{"ruleId":"238","severity":1,"message":"276","line":12,"column":7,"nodeType":"240","messageId":"241","endLine":12,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":48,"column":21,"nodeType":"244","endLine":52,"endColumn":22},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["283"],"jsx-a11y/aria-props","aria-role: This attribute is an invalid ARIA attribute.","JSXAttribute","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Loading' is assigned a value but never used.","'isValidSession' is assigned a value but never used.","'history' is assigned a value but never used.","'setToSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["284"],"'Alert' is defined but never used.","'Button' is defined but never used.","'REACT_APP_CLIENT_ID' is assigned a value but never used.","'REACT_APP_AUTHORIZE_URL' is assigned a value but never used.","'REACT_APP_REDIRECT_URL' is assigned a value but never used.",["285"],"'_' is defined but never used.","'toSearch' is assigned a value but never used.","'image' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"286","fix":"290"},"Update the dependencies array to be: [props]",{"range":"291","text":"292"},"Update the dependencies array to be: [handleSearch]",{"range":"293","text":"294"},{"range":"295","text":"292"},[761,763],"[props]",[1414,1416],"[handleSearch]",[761,763]]