[{"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\index.js":"1","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\router\\AppRouter.js":"2","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Home.js":"3","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Dashboard.js":"4","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\NotFoundPage.js":"5","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Header.js":"6","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Redirect.js":"7","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\functions.js":"8","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\store\\store.js":"9","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchForm.js":"10","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\actions\\result.js":"11","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\albums.js":"12","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\playlist.js":"13","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\artists.js":"14","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\api.js":"15","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\constants.js":"16","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Loader.js":"17","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\ArtistsList.js":"18","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchResult.js":"19","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\AlbumsList.js":"20","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\PlayList.js":"21","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Details.js":"22"},{"size":369,"mtime":1611109438635,"results":"23","hashOfConfig":"24"},{"size":1812,"mtime":1611205968045,"results":"25","hashOfConfig":"24"},{"size":1375,"mtime":1611272646501,"results":"26","hashOfConfig":"24"},{"size":2521,"mtime":1611248000742,"results":"27","hashOfConfig":"24"},{"size":159,"mtime":1611108983065,"results":"28","hashOfConfig":"24"},{"size":196,"mtime":1611113753925,"results":"29","hashOfConfig":"24"},{"size":786,"mtime":1611205954173,"results":"30","hashOfConfig":"24"},{"size":559,"mtime":1611205977475,"results":"31","hashOfConfig":"24"},{"size":563,"mtime":1611184558818,"results":"32","hashOfConfig":"24"},{"size":1891,"mtime":1611165734932,"results":"33","hashOfConfig":"24"},{"size":1960,"mtime":1611205941626,"results":"34","hashOfConfig":"24"},{"size":429,"mtime":1611205990811,"results":"35","hashOfConfig":"24"},{"size":453,"mtime":1611205882265,"results":"36","hashOfConfig":"24"},{"size":439,"mtime":1611205881484,"results":"37","hashOfConfig":"24"},{"size":350,"mtime":1611117437546,"results":"38","hashOfConfig":"24"},{"size":252,"mtime":1611117467959,"results":"39","hashOfConfig":"24"},{"size":677,"mtime":1611210919103,"results":"40","hashOfConfig":"24"},{"size":3367,"mtime":1611283080017,"results":"41","hashOfConfig":"24"},{"size":2830,"mtime":1611248038386,"results":"42","hashOfConfig":"24"},{"size":3212,"mtime":1611283139536,"results":"43","hashOfConfig":"24"},{"size":3557,"mtime":1611285296539,"results":"44","hashOfConfig":"24"},{"size":1960,"mtime":1611285294574,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6qrerb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\index.js",[],["99","100"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\router\\AppRouter.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Home.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Dashboard.js",["101"],"import React, { useState } from 'react'\r\nimport Header from './Header'\r\nimport SearchForm from './SearchForm'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists,\r\n} from '../actions/result'\r\nimport Loader from './Loader'\r\nimport SearchResult from './SearchResult'\r\n\r\nconst Dashboard = (props) => {\r\n  const albums = useSelector((state) => state.albums)\r\n  const artists = useSelector((state) => state.artists)\r\n  const playlist = useSelector((state) => state.playlist)\r\n  const dispatch = useDispatch()\r\n  const [Loading, setLoading] = useState(false)\r\n  const [selectedCategory, setSelectedCategory] = useState('albums')\r\n  const { isValidSession, history } = props\r\n  const [toSearch, setToSearch] = useState('')\r\n  const handleSearch = (searchMe) => {\r\n    setToSearch(searchMe)\r\n    if (isValidSession()) {\r\n      setLoading(true)\r\n      dispatch(initiateGetResult(searchMe)).then(() => {\r\n        setLoading(false)\r\n        setSelectedCategory('albums')\r\n      })\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const setCategory = (category) => {\r\n    setSelectedCategory(category)\r\n  }\r\n\r\n  const loadMore = async (type) => {\r\n    if (isValidSession()) {\r\n      setLoading(true)\r\n      switch (type) {\r\n        case 'albums':\r\n          await dispatch(initiateLoadMoreAlbums(albums.next))\r\n          break\r\n        case 'artists':\r\n          await dispatch(initiateLoadMoreArtists(artists.next))\r\n          break\r\n        case 'playlist':\r\n          await dispatch(initiateLoadMorePlaylist(playlist.next))\r\n          break\r\n        default:\r\n      }\r\n      setLoading(false)\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  const result = { albums, artists, playlist }\r\n  return (\r\n    <div>\r\n      <div className='login'>\r\n        <Header />\r\n      </div>\r\n\r\n      <SearchForm handleSearch={handleSearch} />\r\n      <Loader show={Loading}>Buscando...</Loader>\r\n      <SearchResult\r\n        toSearch={toSearch}\r\n        loadMore={loadMore}\r\n        result={result}\r\n        setCategory={setCategory}\r\n        selectedCategory={selectedCategory}\r\n        isValidSession={isValidSession}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n",["102","103"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\NotFoundPage.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Header.js",["104"],"import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <img src='https://img.icons8.com/bubbles/200/000000/spotify.png' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Redirect.js",["105","106"],"import React, { useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport { getParamValues } from '../utils/functions'\r\n\r\nexport const Redirect = (props) => {\r\n  useEffect(() => {\r\n    const { setExpiryTime, history, location } = props\r\n    try {\r\n      if (_.isEmpty(location.hash)) {\r\n        return history.push('/dashboard')\r\n      }\r\n\r\n      const access_token = getParamValues(location.hash)\r\n      const expiryTime = new Date().getTime() + access_token.expires_in * 1000\r\n      localStorage.setItem('params', JSON.stringify(access_token))\r\n      localStorage.setItem('expiry_time', expiryTime)\r\n      setExpiryTime(expiryTime)\r\n      history.push('/dashboard')\r\n    } catch (err) {\r\n      history.push('/')\r\n      console.error('error', err)\r\n    }\r\n  }, [])\r\n\r\n  return null\r\n}\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\functions.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\store\\store.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchForm.js",["107","108"],"import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchMe, setSearchMe] = useState('')\r\n  const [errorMsg, setErrorMsg] = useState(false)\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (searchMe.trim() !== '') {\r\n      props.handleSearch(searchMe)\r\n    } else {\r\n      setErrorMsg(true)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg ? (\r\n          <p className='errorMsg'>\r\n            No podemos saber qué estás buscando{' '}\r\n            <i\r\n              style={{ fontSize: '1rem' }}\r\n              class='em em-confused'\r\n              aria-role='presentation'\r\n              aria-label='CONFUSED FACE'\r\n            ></i>\r\n            . <br />\r\n            Ingresa una palabra relacionada con lo que buscas e ¡intentalo de\r\n            nuevo!{' '}\r\n            <i\r\n              style={{ fontSize: '1rem' }}\r\n              class='em em-white_check_mark'\r\n              aria-role='presentation'\r\n              aria-label='WHITE HEAVY CHECK MARK'\r\n            ></i>\r\n            .\r\n          </p>\r\n        ) : null}\r\n        <Form.Group controlId='formBasicEmail'>\r\n          <Form.Label style={{ color: '#fce0a2' }}>\r\n            ¿Qué estás buscando?\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='search'\r\n            name='searchTerm'\r\n            value={searchMe}\r\n            onChange={(e) => {\r\n              setSearchMe(e.target.value)\r\n              setErrorMsg(false)\r\n            }}\r\n            placeholder='Buscar por album, artista o play list'\r\n            autoComplete='off'\r\n          />\r\n        </Form.Group>\r\n        <Button style={{ background: '#60be92', border: 'none' }} type='submit'>\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\actions\\result.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\albums.js",[],["109","110"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\playlist.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\reducers\\artists.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\api.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\utils\\constants.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Loader.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\ArtistsList.js",["111","112"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\SearchResult.js",["113","114"],"import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport AlbumsList from './AlbumsList'\r\nimport ArtistsList from './ArtistsList'\r\nimport PlayList from './PlayList'\r\n\r\nconst SearchResult = (props) => {\r\n  const albums = useSelector((state) => state.albums)\r\n  const artists = useSelector((state) => state.artists)\r\n  const playlist = useSelector((state) => state.playlist)\r\n  const {\r\n    isValidSession,\r\n    setCategory,\r\n    selectedCategory,\r\n    loadMore,\r\n    toSearch,\r\n  } = props\r\n  if (!isValidSession()) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/',\r\n          state: {\r\n            session_expired: true,\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='search-buttons'>\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n      {albums.items ? (\r\n        albums.items.length === 0 ? (\r\n          <p className='alert alert-warning alert-dismissible fade show'>\r\n            No hemos encontrado nada relacionado a {toSearch}. Intenta con otras\r\n            palabras\r\n          </p>\r\n        ) : (\r\n          <div className='load-more' onClick={() => loadMore(selectedCategory)}>\r\n            <Button variant='btn btn-outline-dark' type='button'>\r\n              Ver mas...\r\n            </Button>\r\n          </div>\r\n        )\r\n      ) : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchResult\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\AlbumsList.js",["115","116"],"import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport Details from './Details'\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const dispatch = useDispatch()\r\n  const [showInfo, setShowInfo] = useState(false)\r\n  const [albumInfo, setAlbumInfo] = useState({})\r\n  let image = ''\r\n  const handleAlbum = (albumId, index) => {\r\n    let albumSelected = albums.items.filter((album) => album.id === albumId)\r\n    albumSelected = albumSelected[0]\r\n    if (albumSelected.images.length !== 0) {\r\n      image = albumSelected.images[0].url\r\n    } else {\r\n      image =\r\n        'https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n    }\r\n    setAlbumInfo({\r\n      artist: albumSelected.artists[0].name,\r\n      image,\r\n      name: albumSelected.name,\r\n      release: albumSelected.release_date,\r\n      tracks: albumSelected.total_tracks,\r\n      url: albumSelected.external_urls.spotify,\r\n      type: 'albums',\r\n    })\r\n    setShowInfo(true)\r\n  }\r\n  const closeInfo = () => {\r\n    setShowInfo(false)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {showInfo ? <Details info={albumInfo} closeInfo={closeInfo} /> : null}\r\n      {!showInfo\r\n        ? Object.keys(albums).length > 0 && (\r\n            <div className='albums'>\r\n              {albums.items.map((album, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <Card\r\n                      className='card text-white bg-dark mb-3'\r\n                      style={{\r\n                        width: '16rem',\r\n                      }}\r\n                      onClick={() => {\r\n                        handleAlbum(album.id, index)\r\n                      }}\r\n                    >\r\n                      <a\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        className='card-image-link'\r\n                      >\r\n                        {!_.isEmpty(album.images) ? (\r\n                          <Card.Img\r\n                            variant='top'\r\n                            src={album.images[0].url}\r\n                            alt=''\r\n                          />\r\n                        ) : (\r\n                          <Card.Img\r\n                            src='https://res.cloudinary.com/dafegosa/image/upload/v1611283043/girl-1990347_1920_rvvdad.jpg'\r\n                            alt=''\r\n                          />\r\n                        )}\r\n                      </a>\r\n                      <Card.Body>\r\n                        <Card.Title>{album.name}</Card.Title>\r\n                        <Card.Text>\r\n                          <small>\r\n                            {album.artists\r\n                              .map((artist) => artist.name)\r\n                              .join(', ')}\r\n                          </small>\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </div>\r\n          )\r\n        : null}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AlbumsList\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\PlayList.js",["117","118"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\spotify-api\\spotify-api\\src\\components\\Details.js",["119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":18},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":7,"nodeType":"134","endLine":6,"endColumn":74},{"ruleId":"126","severity":1,"message":"135","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":23,"column":6,"nodeType":"138","endLine":23,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":25,"column":15,"nodeType":"142","endLine":25,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":34,"column":15,"nodeType":"142","endLine":34,"endColumn":39},{"ruleId":"122","replacedBy":"143"},{"ruleId":"124","replacedBy":"144"},{"ruleId":"126","severity":1,"message":"145","line":8,"column":9,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":61,"column":27,"nodeType":"134","endLine":65,"endColumn":28},{"ruleId":"126","severity":1,"message":"148","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"149","line":5,"column":23,"nodeType":"128","messageId":"129","endLine":5,"endColumn":34},{"ruleId":"126","severity":1,"message":"145","line":8,"column":9,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":53,"column":23,"nodeType":"134","endLine":57,"endColumn":24},{"ruleId":"126","severity":1,"message":"145","line":8,"column":9,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":58,"column":27,"nodeType":"134","endLine":62,"endColumn":28},{"ruleId":"126","severity":1,"message":"148","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"150","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"151","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["152"],["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["154"],"jsx-a11y/aria-props","aria-role: This attribute is an invalid ARIA attribute.","JSXAttribute",["152"],["153"],"'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [props]",{"range":"157","text":"158"},[761,763],"[props]"]